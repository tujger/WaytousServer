buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath 'com.google.appengine:gradle-appengine-plugin:+'
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:+'
        classpath 'org.akhikhl.gretty:gretty:+'
    }
}

plugins {
    id "com.eriwen.gradle.js" version "2.14.1"
    id "com.eriwen.gradle.css" version "2.14.0"
}

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://jitpack.io" }
}

group 'com.edeqa'
version '2.64'

/**
 * NOTE!
 * You must use different run configuraitons depending on this installation type.
 * "App Engine DevAppServer" ("WaytousServlet") means installation type 'google-appengine'.
 * "Application" ("WaytousServer") means installation type 'standalone-server'.
 */
//def installationType = 'google-appengine'
def installationType = 'standalone-server'


apply plugin: 'js'
//apply plugin: 'css'
apply plugin: 'java'
apply plugin: 'war'

if (installationType == 'google-appengine') {
    apply plugin: 'org.akhikhl.gretty'
    apply plugin: 'com.google.cloud.tools.appengine'
//    apply plugin: 'com.google.cloud.tools.appengine-standard'
//    apply plugin: 'appengine'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

//minifyCss {
//    source = file("${projectDir}/src/main/webapp/css/tracking.js")
//    dest = file("${buildDir}/exploded-app/css/tracking.js")
//    yuicompressor { // Optional
//        lineBreakPos = -1
//    }
//}

dependencies {
    compile 'org.java-websocket:Java-WebSocket:+'
//    compile 'org.json:json:20160212'
    compile (project(':WaytousFramework')) {
        exclude group: 'com.github.edeqa', module: 'helpers'
        exclude group: 'org.json', module: 'json'
        exclude group: 'org.slf4j', module: 'slf4j-nop'
    }
    compile (project(':Helpers')) {
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'junit', module: 'junit'
        exclude group: 'org.json', module: 'json'
    }
    compile (project(':Edequate')) {
        exclude group: 'com.github.edeqa', module: 'helpers'
        exclude group: 'org.json', module: 'json'
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'javax.servlet', module: 'javax.servlet-api'
    }
    compile project(':EventBus')

// gae servlet rows
    if (installationType == 'google-appengine') {
//        appengineSdk 'com.google.appengine:appengine-java-sdk:1.9.54'
        compile 'com.google.appengine:appengine-api-1.0-sdk:+'
        compile 'com.google.firebase:firebase-server-sdk:3.0.3'
        compile 'com.google.guava:guava:23.6-jre'
        compile 'javax.servlet:javax.servlet-api:3.1.0'
        compile 'org.apache.httpcomponents:httpclient:4.5.4'

//        compile 'com.google.firebase:firebase-admin:+'
        compile 'com.google.appengine:appengine:+'
        compile 'com.google.api:gax:1.18.0', 'com.google.api:gax-grpc:1.18.0'
    }

// server rows
    if (installationType == 'standalone-server') {
        compile 'com.google.firebase:firebase-admin:+'
        compile 'javax.servlet:javax.servlet-api:+'
    }
    compile fileTree(dir: 'libs', include: ['*.jar'])
//    testCompile group: 'junit', name: 'junit', version: '4.12'
}

import com.eriwen.gradle.js.tasks.MinifyJsTask
//import com.eriwen.gradle.js.tasks.MinifyJsTask

def all = file("${projectDir}/src/main/webapp/js/all.js")
def allMap = file("${projectDir}/src/main/webapp/all.sourcemap.json")
def edequate = file("${buildDir}/exploded-app/js/Edequate.js")
def edequateMap = file("${buildDir}/exploded-app/Edequate.sourcemap.json")


task updateChanged(type: Copy) {
    from "${project(':Edequate').projectDir}/src/main/webapp", "${projectDir}/src/main/webapp"
    into "${buildDir}/exploded-app"
    exclude "**/.idea/*"
}

minifyJs {
    source = "${projectDir}/src/main/webapp/js"
    dest = all
    sourceMap = allMap
    closure {
        warningLevel = 'QUIET'
        compilationLevel = 'SIMPLE_OPTIMIZATIONS'
        compilerOptions.languageIn = 'ECMASCRIPT6'
        compilerOptions.languageOut = 'ECMASCRIPT5'
    }
}

task minifyEdequate(type: MinifyJsTask) {
    source = "${project(':Edequate').projectDir}/src/main/webapp/js/Edequate.js"
    dest = edequate
    sourceMap = edequateMap
    closure {
        warningLevel = 'QUIET'
        compilationLevel = 'SIMPLE_OPTIMIZATIONS'
        compilerOptions.languageIn = 'ECMASCRIPT6'
        compilerOptions.languageOut = 'ECMASCRIPT5'
    }
}

task minifyAllJS {
    /*def path = new File("${projectDir}/src/main/webapp");
    print "Minifying from ${path}\n"
    print "    to \"${buildDir}/exploded-app\nProcessing:\n"
    fileTree(path).eachWithIndex { file, index ->
        def name = file.toString().replace(path.toString(), "")
        if (!(name.toString() ==~ /.*\.js$/)) { return }
        print "--- ${name}..."
        def dynamicTask = "minify$index"
        task "$dynamicTask" (type: MinifyJsTask) {
            source = file
            dest = new File("${buildDir}/exploded-app${name}")
            closure {
                warningLevel = 'QUIET'
                compilationLevel = 'SIMPLE_OPTIMIZATIONS'
                compilerOptions.languageIn = 'ECMASCRIPT6'
                compilerOptions.languageOut = 'ECMASCRIPT5'
            }
        }
        tasks."$dynamicTask".execute()
        print " done.\n"
    }
    print "Minifying done.\n"*/
}

war {
    it.dependsOn updateChanged
    tasks.updateChanged.execute()
    it.dependsOn minifyJs
    all.delete()
    allMap.delete()
    tasks.minifyJs.execute()
//    it.dependsOn minifyEdequate
//    tasks.minifyEdequate.execute()
    it.dependsOn minifyAllJS

    print "Final stage...\n"
}

if (installationType == 'google-appengine') {
    appengine {
//        downloadSdk = true
//        appcfg {
//            oauth2 = true
//        }
        run {
            port = 8180
            host = "0.0.0.0"
        }
//        httpAddress = "0.0.0.0"
//        httpPort = 8180
//        host = "0.0.0.0"
        deploy {
            stopPreviousVersion = true  // default - stop the current version
            promote = true              // default - & make this the current version
        }
    }
    gretty {
        httpPort = 8180
        httpsPort = 8444
        contextPath = '/'
        servletContainer = "jetty9"
    }
}

war.dependsOn(':Edequate:war')

war {
    with copySpec {
        from zipTree("${project(':Edequate').buildDir}/libs/Edequate.war")
        into("/")
        duplicatesStrategy DuplicatesStrategy.EXCLUDE
    }
}